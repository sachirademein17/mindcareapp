{
  "name": "mental-health-platform",
  "version": "1.0.0",
  "description": "A comprehensive mental health platform with CI/CD pipeline",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:test": "npm run build && npm run test:all",
    "build:prod": "npm run build && npm run test:production",
    
    "test": "npm run test:all",
    "test:all": "npm run test:unit && npm run test:e2e && npm run test:api && npm run test:performance && npm run test:security && npm run test:vulnerabilities",
    "test:fast": "npm run test:unit && npm run test:e2e && npm run test:api",
    
    "test:unit": "jest --config jest.config.js",
    "test:unit:coverage": "jest --config jest.config.js --coverage",
    "test:unit:watch": "jest --config jest.config.js --watch",
    "test:unit:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm run test:headless",
    
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:install": "playwright install",
    "test:e2e:headless": "playwright test --headed=false",
    
    "test:api": "newman run tests/api/mental-health-api.postman_collection.json --reporters cli,html --reporter-html-export test-reports/newman/api-report.html",
    "test:api:report": "newman run tests/api/mental-health-api.postman_collection.json --reporters html --reporter-html-export test-reports/newman/api-report.html",
    
    "test:performance": "k6 run tests/performance/load-test.js",
    "test:performance:report": "k6 run --out html=test-reports/k6/summary.html tests/performance/load-test.js",
    "test:performance:stress": "k6 run tests/performance/stress-test.js",
    "test:performance:spike": "k6 run tests/performance/spike-test.js",
    
    "test:security": "node scripts/run-zap-scan.js",
    "test:security:report": "node scripts/run-zap-scan.js --report",
    
    "test:vulnerabilities": "snyk test",
    "test:vulnerabilities:report": "snyk test --json | snyk-to-html -o test-reports/snyk/vulnerabilities.html",
    "test:vulnerabilities:monitor": "snyk test && snyk monitor",
    
    "test:accessibility": "lighthouse http://localhost:5173 --output html --output-path test-reports/lighthouse/accessibility.html --chrome-flags=\"--headless\"",
    
    "test:integration": "jest --config=jest.integration.config.js",
    "test:watch": "concurrently \"npm run test:backend:watch\" \"npm run test:frontend:watch\"",
    "test:backend:watch": "cd backend && npm run test:watch",
    "test:frontend:watch": "cd frontend && npm run test:watch",
    "test:coverage": "npm run test:backend:coverage && npm run test:frontend:coverage",
    "test:backend:coverage": "cd backend && npm run test:coverage",
    "test:frontend:coverage": "cd frontend && npm run test:coverage",
    "test:production": "npm run test:performance && npm run test:security",
    "test:dev": "npm run test:unit",
    "test:release": "npm run test:full",
    "test:minimal": "npm run test:backend",
    "test:quick": "npm run test:unit && npm run lint",
    "test:full": "npm run test:all && npm run test:security && npm run reports:generate",
    "lint": "eslint backend/src frontend/src --ext .js,.ts,.tsx",
    "lint:fix": "eslint backend/src frontend/src --ext .js,.ts,.tsx --fix",
    "lint:report": "eslint backend/src frontend/src --ext .js,.ts,.tsx --format html --output-file test-reports/eslint/lint-report.html",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend:fix": "cd backend && npm run lint:fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    
    "start:test-servers": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "test:dashboard": "node scripts/test-dashboard.js",
    "type-check": "npm run type-check:backend && npm run type-check:frontend",
    "type-check:backend": "cd backend && npx tsc --noEmit",
    "type-check:frontend": "cd frontend && npx tsc --noEmit",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm run preview",
    "validate": "npm run lint && npm run type-check && npm run test:all",
    "check": "npm run lint && npm run test:unit",
    "pre-commit": "npm run lint:fix && npm run test:unit",
    "reports:generate": "node scripts/generate-reports.js",
    "reports:open": "node scripts/open-reports.js",
    "reports:coverage": "node scripts/open-coverage.js",
    "reports:e2e": "node scripts/open-e2e-reports.js",
    "reports:performance": "node scripts/open-performance-reports.js",
    "reports:history": "node scripts/show-test-history.js",
    "coverage:open": "npm run reports:coverage",
    "db:test:start": "docker-compose -f docker-compose.test.yml up -d",
    "db:test:stop": "docker-compose -f docker-compose.test.yml down",
    "db:test:restart": "npm run db:test:stop && npm run db:test:start",
    "db:test:reset": "npm run db:test:restart && node scripts/reset-test-data.js",
    "db:test:status": "docker-compose -f docker-compose.test.yml ps",
    "test:setup": "npm run db:test:start && node scripts/setup-test-environment.js",
    "test:clean": "npm run db:test:stop && node scripts/clean-test-environment.js",
    "test:reset": "npm run test:clean && npm run test:setup",
    "test:system-check": "node scripts/system-check.js",
    "security:audit": "npm audit",
    "security:scan": "node scripts/security-scan.js",
    "dashboard": "node scripts/test-dashboard.js",
    "sonar": "sonar-scanner",
    "sonar:local": "sonar-scanner -Dsonar.host.url=http://localhost:9000",
    "clean": "rimraf backend/dist backend/coverage frontend/dist frontend/coverage node_modules backend/node_modules frontend/node_modules reports"
  },
  "devDependencies": {
    "@mswjs/data": "^0.16.1",
    "@playwright/test": "^1.40.0",
    "@types/jest": "^29.5.5",
    "@types/node": "^20.8.0",
    "@types/node-fetch": "^2.6.4",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.52.0",
    "express": "^4.21.2",
    "jest": "^29.7.0",
    "lighthouse": "^11.3.0",
    "msw": "^1.3.2",
    "newman": "^6.0.0",
    "node-fetch": "^3.3.2",
    "rimraf": "^5.0.5",
    "snyk-to-html": "^2.4.1",
    "sonar-scanner": "^3.1.0",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "mental-health",
    "healthcare",
    "react",
    "nodejs",
    "typescript",
    "ci-cd"
  ],
  "author": "Your Name",
  "license": "MIT"
}
